{
  "token": "j",
  "full_token": "j",
  "tap": "homebrew/cask",
  "name": [
    "J"
  ],
  "desc": "Programming language for mathematical, statistical and logical analysis of data",
  "homepage": "https://www.jsoftware.com/",
  "url": "https://www.jsoftware.com/download/j903/install/j903_mac64.zip",
  "appcast": null,
  "version": "903",
  "versions": {
  },
  "installed": null,
  "outdated": false,
  "sha256": "39c31038387eaff772e3d120a01b3d6901be8f7c70a23b580d91db3d15ed710d",
  "artifacts": [
    {
      "uninstall": [
        {
          "delete": "$(brew --prefix)/Caskroom/j/903/j"
        }
      ]
    },
    {
      "installer": [
        {
          "script": {
            "executable": "j903/macos-fix.command"
          }
        }
      ]
    },
    {
      "installer": [
        {
          "script": {
            "executable": "j903/bin/jconsole",
            "args": [
              "-js",
              "load 'pacman'",
              "'install' jpkg '*'",
              "exit 0"
            ]
          }
        }
      ]
    },
    {
      "app": [
        "j903/jqt.app"
      ]
    },
    {
      "app": [
        "j903/jbrk.app"
      ]
    },
    {
      "app": [
        "j903/jcon.app"
      ]
    },
    {
      "app": [
        "j903/jhs.app"
      ]
    },
    {
      "binary": [
        "j903/bin/jconsole",
        {
          "target": "jconsole"
        }
      ]
    },
    {
      "binary": [
        "j903/bin/jbrk.command",
        {
          "target": "jbrk"
        }
      ]
    },
    {
      "binary": [
        "j903/bin/jhs.command",
        {
          "target": "jhs"
        }
      ]
    },
    {
      "binary": [
        "j903/bin/jqt.command",
        {
          "target": "jqt"
        }
      ]
    },
    {
      "binary": [
        "j903/bin/jconsole",
        {
          "target": "jcon"
        }
      ]
    },
    {
      "postflight": "  postflight do\n    # Use `readlink` to get full path of symlinked commands.\n    commands.each do |c|\n      command = \"#{staged_path}/j#{version}/bin/#{c}.command\"\n      File.write command, File.read(command).gsub(\"$0\", '$(/usr/bin/readlink \"$0\" || /bin/echo \"$0\")')\n    end\n\n    # Fix relative paths inside App bundles.\n    apps.each do |a|\n      apprun = \"#{appdir}/#{a}.app/Contents/MacOS/apprun\"\n      File.write apprun, File.read(apprun).gsub(%r{`dirname \"\\$0\"`.*?/bin}, \"#{staged_path}/j#{version}/bin\")\n    end\n  end\n"
    }
  ],
  "caveats": null,
  "depends_on": {
  },
  "conflicts_with": null,
  "container": null,
  "auto_updates": null,
  "variations": {
  }
}
